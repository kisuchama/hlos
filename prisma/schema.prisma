generator js {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Appellation {
  appellation String
  hero        Hero   @relation("Namee", fields: [heroId], references: [id])
  heroId      Int
  caller      Hero   @relation("Caller", fields: [callerId], references: [id])
  callerId    Int

  @@id([heroId, callerId])
}

model Attribute {
  id      Int     @id @default(autoincrement())
  name    String
  color   String
  events  Event[]
}

model Card {
  id          Int           @id @default(autoincrement())
  title       String?
  titleJp     String?
  hero        Hero          @relation(fields: [heroId], references: [id])
  heroId      Int
  rarity      Int
  event       Event         @relation(fields: [eventId], references: [id])
  eventId     Int
  translation Translation[]
  cameos      CardCameo[]

  @@index([heroId, eventId])
}

model CardCameo {
  hero   Hero @relation(fields: [heroId], references: [id])
  heroId Int
  card   Card @relation(fields: [cardId], references: [id])
  cardId Int

  @@id([heroId, cardId])
}

model Event {
  id          Int               @id @default(autoincrement())
  name        String
  nameJp      String?
  desc        String?           @db.Text
  startDate   DateTime          @db.Date
  endDate     DateTime          @db.Date
  attribute   Attribute?        @relation(fields:[attributeId], references: [id])
  attributeId Int?  
  sector      Sector?           @relation(fields: [sectorId], references: [id])
  sectorId    Int?
  hero        Hero?             @relation(fields: [heroId], references: [id])
  heroId      Int?
  slug        String            @unique
  noCover     Boolean?
  translator  EventTranslator[]
  parts       EventPart[]
  cards       Card[]

  @@index([sectorId, heroId])
}

model EventCameo {
  hero   Hero      @relation(fields: [heroId], references: [id])
  heroId Int
  part   EventPart @relation(fields: [partId], references: [id])
  partId Int

  @@id([heroId, partId])
}

model EventPart {
  id          Int           @id @default(autoincrement())
  event       Event         @relation(fields: [eventId], references: [id])
  eventId     Int
  part        Int
  cameos      EventCameo[]
  translation Translation[]

  @@index([eventId])
}

model EventTranslator {
  event         Event       @relation(fields: [eventId], references: [id])
  eventId       Int
  translator    Translator  @relation(fields: [translatorId], references: [id])
  translatorId  Int

  @@id([eventId, translatorId])
}

model Hero {
  id          Int           @id @default(autoincrement())
  name        String
  surname     String?
  hex         String?       @db.Char(7)
  chibi       String?
  portrait    String?
  substance   String?
  birthday    DateTime?     @db.Date
  height      Int?
  weight      Int?
  sector      Sector?       @relation(fields: [sectorId], references: [id])
  sectorId    Int?
  namee       Appellation[] @relation("Namee")
  caller      Appellation[] @relation("Caller")
  cards       Card[]
  cardCameos  CardCameo[]
  events      Event[]
  eventCameos EventCameo[]
  mainCameos  MainCameo[]

  @@index([sectorId])
}

model MainCameo {
  hero   Hero     @relation(fields: [heroId], references: [id])
  heroId Int
  part   MainPart @relation(fields: [partId], references: [id])
  partId Int

  @@id([heroId, partId])
}

model MainPart {
  id          Int         @id @default(autoincrement())
  chapter     MainStory   @relation(fields: [chapterId], references: [id])
  chapterId   Int
  part        Int
  translation String?
  cameos      MainCameo[]

  @@index([chapterId])
}

model MainStory {
  id      Int        @id @default(autoincrement())
  name    String
  season  Int
  chapter Int
  parts   MainPart[]
}

model Sector {
  id       Int     @id @default(autoincrement())
  location String
  color    String?
  hex      String? @db.Char(7)
  heroes   Hero[]
  events   Event[]
}

model Translation {
  id           Int        @id @default(autoincrement())
  link         String
  translator   Translator @relation(fields: [translatorId], references: [id])
  translatorId Int
  eventPart    EventPart? @relation(fields: [eventPartId], references: [id])
  eventPartId  Int?
  card         Card?      @relation(fields: [cardId], references: [id])
  cardId       Int?
}

model Translator {
  id           Int                @id @default(autoincrement())
  name         String
  url          String?
  twitter      String?
  translations Translation[]
  events       EventTranslator[]
}